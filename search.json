[{"path":"https://priism-center.github.io/shinyquiz/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 shinyquiz authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://priism-center.github.io/shinyquiz/articles/custom_questions.html","id":"maximizing-create_question","dir":"Articles","previous_headings":"","what":"Maximizing create_question()","title":"Customizing Questions","text":"create_question() automatically generates necessary HTML create question prompt. However, can also take display custom HTML. htmltools shiny include many functions convert R code HTML. example, custom plot can included question passing plot shiny::renderPlot() wrapping entire prompt using htmltools::tagList(). Note HTML functions print correctly using shinyquiz::preview_app() recommended.","code":"create_question(   htmltools::tagList(     htmltools::p(\"A custom question with a plot\"),     shiny::renderPlot(plot(rnorm(100), rnorm(100))),   ),   add_slider(10, 50, 30, correct = 20),   label = 'Select 20' ) create_question(   htmltools::tagList(     htmltools::p(\"A custom question with a table\"),     reactable::reactable(mtcars),   ),   add_slider(10, 50, 30, correct = 20),   label = 'Select 20' )"},{"path":"https://priism-center.github.io/shinyquiz/articles/custom_questions.html","id":"full-customization-with-create_question_raw","dir":"Articles","previous_headings":"","what":"Full Customization with create_question_raw()","title":"Customizing Questions","text":"create_question_raw() gives control question answer options. can use Shiny input function create choices, define grading logic. Three elements required create_question_raw(): - prompt: HTML div defining question accompanying elements. can use HTML tags, Shiny inputs, UI elements. set user see. minimum include shiny input object used collect user’s answer. - grader: function takes user input argument returns back TRUE FALSE. gives full control grading logic. - correct_answer_pretty: Text representing correct answer. Useful displaying “pretty” version quiz’s summary table. - user_answer_prettifier: optional function takes user input argument returns back “pretty” version . Useful displaying cleaner answers quiz’s summary table. default paste0(user_input, collapse = \", \"). example, use shiny::dateInput() specify date input. Note use shiny::NS('quiz')('answers') define inputId. required shinyquiz find user’s answer.   Take caution defining grader function elements may return back object different class expecting. ’s recommended always self-test quiz.","code":"create_question_raw(   prompt = htmltools::div(     htmltools::p(\"On what date was the U.S. Declaration of Independence signed?\"),     shiny::dateInput(       inputId = shiny::NS('quiz')('answers'),       label = 'Select 5',       value = as.Date('1800-01-01')     )  ),  grader = \\(user_input) setequal(user_input, as.Date('1776-07-04')),  correct_answer_pretty = '5' )"},{"path":"https://priism-center.github.io/shinyquiz/articles/deploying.html","id":"creating-a-quiz","dir":"Articles","previous_headings":"","what":"Creating a Quiz","title":"Deploying to shinyapps.io","text":"First, let’s create quiz using shinyquiz. ’s example:","code":"library(shiny) library(shinyquiz)  # Create the quiz quiz <- shinyquiz::create_quiz(   # ... (your example code here) )"},{"path":"https://priism-center.github.io/shinyquiz/articles/deploying.html","id":"previewing-the-quiz-locally","dir":"Articles","previous_headings":"Creating a Quiz","what":"Previewing the Quiz Locally","title":"Deploying to shinyapps.io","text":"deploying, might want preview quiz make sure looks functions expected.","code":"preview_app(quiz)"},{"path":"https://priism-center.github.io/shinyquiz/articles/deploying.html","id":"building-the-shiny-app","dir":"Articles","previous_headings":"","what":"Building the Shiny App","title":"Deploying to shinyapps.io","text":"Now quiz, let’s build Shiny app host . ’s can :","code":"# Build the shiny UI ui <- shiny::fluidPage(   htmltools::div(     style = \"max-width: 700px\",     shinyquiz::quiz_ui(quiz)   ) )  # Build the server server <- function(input, output, session) {   shinyquiz::quiz_server(quiz) }  # Run the app shiny::shinyApp(ui, server)"},{"path":"https://priism-center.github.io/shinyquiz/articles/deploying.html","id":"deploying-to-shinyapps-io","dir":"Articles","previous_headings":"","what":"Deploying to shinyapps.io","title":"Deploying to shinyapps.io","text":"’s two easy ways deploy straight shinyapps.io via Rstudio. , ’ll need save code file app.R script. , can either deploy using Rstudio interface via blue button using rsconnect package. can find --date information regarding methods Posit site.","code":""},{"path":"https://priism-center.github.io/shinyquiz/articles/deploying.html","id":"full-script","dir":"Articles","previous_headings":"Deploying to shinyapps.io","what":"Full Script","title":"Deploying to shinyapps.io","text":"full, example version app.R file:","code":"library(shiny) library(shinyquiz)  # create the quiz  quiz <- create_quiz(   create_question(     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed id ornare augue, fringilla molestie metus. Donec eget tortor tincidunt, sagittis dui volutpat, finibus est. Select nulla.',     add_choice('Nulla vel'),     add_choice('auctor nulla'),     add_choice('nulla', correct = TRUE)   ),   create_question(     'Molestie metus. Maecenas tincidunt maximus viverra. Sed non gravida quam. Phasellus at iaculis leo. Mauris congue aliquet dui, ut dapibus lorem porttitor sed.',     add_choice('ATT'),     add_choice('ATE', correct = TRUE),     add_choice('ATC', correct = TRUE),     label = 'Select ATE and ATC'   ),   create_question(     'Sed non gravida quam. Phasellus at iaculis leo.',     add_slider(10, 50, 30, correct = 20),     label = 'Select 20'   ) )  # build the shiny UI ui <- shiny::fluidPage(   htmltools::div(     style = \"max-width: 700px\",     quiz_ui(quiz)   ) )  # build the server server <- function(input, output, session) {   quiz_server(quiz) }  # run the app shiny::shinyApp(ui, server)"},{"path":"https://priism-center.github.io/shinyquiz/articles/get_started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Get Started","text":"shinyquiz now CRAN. can also install latest development version GitHub:","code":"# install latest release from cran install.packages('shinyquiz')  # latest development version # install.packages(\"remotes\") remotes::install_github('priism-center/shinyquiz')"},{"path":"https://priism-center.github.io/shinyquiz/articles/get_started.html","id":"creating-questions","dir":"Articles","previous_headings":"","what":"Creating Questions","title":"Get Started","text":"start creating quiz, first load package. quiz composed individual questions created via create_question() function. objects integrated quiz using create_quiz() function. Individual questions take prompt arbitrary amount answer choices via add_numeric(), add_choice(), add_slider(),","code":"library(shinyquiz) q1 <- create_question(   'What is 2+2?',   add_numeric(correct = 4) ) q2 <- create_question(   'What is the capital of France?',   add_choice('Lyon'),   add_choice('Paris', correct = TRUE),   add_choice('Strasbourg'),   label = 'Select a city' ) q3 <- create_question(   'Which cities are capital cities?',   add_choice('Paris', correct = TRUE),   add_choice('London', correct = TRUE),   add_choice('Munich'),   label = 'Select all that are correct' ) q4 <- create_question(   'What is 1.5 / 2?',   add_slider(correct = 0.75) )"},{"path":"https://priism-center.github.io/shinyquiz/articles/get_started.html","id":"forming-a-quiz","dir":"Articles","previous_headings":"","what":"Forming a Quiz","title":"Get Started","text":"Create quiz questions preview .   preview_app() launches quiz Shiny instance quickly check quiz design. can also print quiz via R console quickly preview without Shiny runtime. latter quick lacks interactivity elements render well.","code":"quiz <- create_quiz(q1, q2, q3, q4) preview_app(quiz)"},{"path":"https://priism-center.github.io/shinyquiz/articles/get_started.html","id":"validating-grading","dir":"Articles","previous_headings":"","what":"Validating Grading","title":"Get Started","text":"Accurate grading essential effectiveness shinyquiz quizzes. Automated grading convenient, ’s important verify correctness.","code":""},{"path":"https://priism-center.github.io/shinyquiz/articles/get_started.html","id":"understanding-automated-grading","dir":"Articles","previous_headings":"Validating Grading","what":"Understanding Automated Grading","title":"Get Started","text":"Default function: setequal() function used default test user’s response correct. Text input: add_text(), user input , default, cleaned checking equality, may affect outcome. Varied inputs: Shiny elements might return values lists vectors, users may enter rounded values instead precise ones, leading unexpected grading results. find grading giving unexpected results, may want consider using create_question_raw(). function gives finer control grading handled.","code":""},{"path":"https://priism-center.github.io/shinyquiz/articles/get_started.html","id":"integrating-into-your-shiny-application","dir":"Articles","previous_headings":"","what":"Integrating into Your Shiny Application","title":"Get Started","text":"can integrate quiz Shiny app adding server UI functions. ’s example:","code":"# UI ui <- fluidPage(   h3('My Excellent Shiny App'),   quiz_ui(quiz) )  # Server server <- function(input, output) {   quiz_server(quiz) }  shinyApp(ui = ui, server = server)"},{"path":"https://priism-center.github.io/shinyquiz/articles/get_started.html","id":"adjusting-options","dir":"Articles","previous_headings":"","what":"Adjusting Options","title":"Get Started","text":"several options can adjust customize behavior quizzes. examples: ns: namespace function created shiny::NS(). default shiny::NS('quiz'). including multiple quizzes within application nesting quiz within module, adjusted addition ns argument within create_question(). See Quiz Module article working example. messages: messages object created create_messages(). Controls messages shown end quiz. class: CSS class add quiz container. Useful custom styling. sandbox: quiz put sandbox mode? TRUE/FALSE. Quiz longer ends first wrong, removes progress bar, grading include unattempted questions. Note presence random question automatically triggers sandbox mode. can overridden set_quiz_options(override = TRUE) end_on_first_wrong: quiz terminate user gets one question wrong? Defaults TRUE. progress_bar: Show progress bar? Defaults TRUE. progress_bar_color: Color progress bar. Can hex color code rgba(). Default #609963.","code":"create_quiz(q1, q2, q3, q4, options = set_quiz_options(sandbox = TRUE))"},{"path":"https://priism-center.github.io/shinyquiz/articles/get_started.html","id":"consuming-the-quiz-output","dir":"Articles","previous_headings":"","what":"Consuming the Quiz Output","title":"Get Started","text":"quiz_server() outputs reactive summary quiz can consumed Shiny application. , run quiz_server() capture ’s output. print using verbatimTextOutput renderPrint. can pass summary functions wish.   ’s basic idea! shinyquiz package, can easily create interactive quizzes add Shiny applications. want share app others, sure check Deploying shinyapps.io article. Enjoy quiz making!","code":"# UI ui <- fluidPage(   h3('My Excellent Shiny App'),   quiz_ui(quiz),   verbatimTextOutput('quizSummary') )  # Server server <- function(input, output) {   quiz_summary <- quiz_server(quiz)   output$quizSummary <- shiny::renderPrint(quiz_summary()) }  shinyApp(ui = ui, server = server)"},{"path":"https://priism-center.github.io/shinyquiz/articles/random_questions.html","id":"creating-a-random-question-generator","dir":"Articles","previous_headings":"","what":"Creating a Random Question Generator","title":"Creating Randomized Questions","text":"can use create_question_random(), ’ll need create function generates single random question. function return question object created create_question() create_question_raw(). ’s example generates random question whether number even odd: can test function running times verifying preview changes time.","code":"random_question <- function() {   number <- round(rnorm(1, 30, 10), 0)   rand_prompt <- paste('Is', number, 'an even number?')    q <- create_question(     prompt = rand_prompt,     add_choice('Yes, it is even', correct = number %% 2 == 0),     add_choice('No, it is odd', correct = number %% 2 != 0)   )    return(q) } random_question() random_question()"},{"path":"https://priism-center.github.io/shinyquiz/articles/random_questions.html","id":"putting-it-all-together","dir":"Articles","previous_headings":"","what":"Putting It All Together","title":"Creating Randomized Questions","text":"random question generator function, can pass create_question_random() along number questions want generate. create quiz 20 randomly generated questions whether numbers even odd.","code":"create_quiz(   create_question_random(.f = random_question, n = 20) )"},{"path":[]},{"path":"https://priism-center.github.io/shinyquiz/articles/random_questions.html","id":"pre-created-vs--dynamic-quizzes","dir":"Articles","previous_headings":"Randomizing on-the-fly","what":"Pre-Created vs. Dynamic Quizzes","title":"Creating Randomized Questions","text":"run create_question_random() outside Shiny server function, set questions generates fixed moment. means deploy Shiny application pre-created quiz, every user see set questions.","code":"# Pre-created quiz my_quiz <- create_quiz(   create_question_random(.f = random_question, n = 20) )"},{"path":"https://priism-center.github.io/shinyquiz/articles/random_questions.html","id":"dynamic-randomization-within-shiny-server","dir":"Articles","previous_headings":"Randomizing on-the-fly","what":"Dynamic Randomization within Shiny Server","title":"Creating Randomized Questions","text":"generate new set questions user session, can include create_question_random() within Shiny app’s server function. way, function re-execute time new user accesses app, providing unique set questions. placing create_question_random() inside server function, ensure quiz dynamic, offering different experience user different times.","code":"# create static quiz for the ui side # this is required to match the namespace quiz <- create_quiz(   create_question_random(.f = random_question, n = 20) )  # build the shiny UI ui <- shiny::fluidPage(   htmltools::div(     style = \"max-width: 700px\",     quiz_ui(quiz)   ) )  # build the server server <- function(input, output, session) {   # create the dynamic quiz   quiz <- create_quiz(     create_question_random(.f = random_question, n = 20)   )      # run the quiz server   quiz_server(quiz) }  # run the app shiny::shinyApp(ui, server)"},{"path":"https://priism-center.github.io/shinyquiz/articles/random_questions.html","id":"additional-information","dir":"Articles","previous_headings":"","what":"Additional Information","title":"Creating Randomized Questions","text":"Note presence random question quiz automatically set quiz option sandbox = TRUE. triggers quiz longer end first wrong question, removes progress bar along top, grade calculation excludes unattempted questions. can override behavior set_quiz_options(override = TRUE). may mix match random regular questions. following create quiz starts one static question follows 20 random ones.  ’s ! sure check documentation create_question_random() information.","code":"create_quiz(   create_question(     prompt = 'My prompt explaining what the ATC of this thing should be',     add_slider(0, 30, 15, correct = 10)   ),   create_question_random(.f = random_question, n = 20) )"},{"path":"https://priism-center.github.io/shinyquiz/articles/styling.html","id":"understanding-the-div-structure","dir":"Articles","previous_headings":"","what":"Understanding the Div Structure","title":"Styling a Quiz using CSS","text":"diving CSS, ’s important understand DOM structure quiz. , generate quiz DOM structure using quiz_ui() function. main container quiz-container encapsulates entire quiz UI. Inside, ’ll find various nested divs, specific class id can targeted CSS styling. inner div rendered Shiny server DOM structure : Note id’s change provide different namespace value quiz options. “quiz-” default prefix.","code":"quiz <- create_quiz(   create_question(     'What is the capital of Illinois?',     add_choice('Chicago'),     add_choice('Paw Paw'),     add_choice('Spingfield', correct = TRUE)   ),   create_question(     'Which elements are gases at room temperature? Select all that apply.',     add_choice('Hydrogen', correct = TRUE),     add_choice('Mercury'),     add_choice('Nitrogen', correct = TRUE),     label = 'Select Hydrogen and Nitrogen'   ),   create_question(     'At what temperature does water boil at sea level?',     add_slider(min = 90, max = 150, default_position = 120, correct = 100),     label = 'Select 100'   ) )  quiz_ui(quiz) <div id=\"quiz-quiz-container\" class=\"quiz-container\">   <div id=\"quiz-UI_quiz\" class=\"shiny-html-output\"><\/div> <\/div> <div id=\"quiz-quiz-container\" class=\"quiz-container\">   <div id=\"quiz-UI_quiz\" class=\"shiny-html-output\">     <div class=\"progress\">       <div class=\"progress-bar\" ...><\/div>     <\/div>     <div>       <div class=\"quiz-header\">...contents of quiz header...<\/div>       <div class=\"quiz-prompt\">         <div>...contents of the quiz prompt...<\/div>       <\/div>     <\/div>     <button id=\"quiz-submit_button\" class='submit-button btn btn-default'>Submit<\/button>     <button id=\"quiz-skip_button\" class='skip-button btn btn-default'>Skip quiz<\/button>   <\/div> <\/div>"},{"path":"https://priism-center.github.io/shinyquiz/articles/styling.html","id":"basic-css-styling","dir":"Articles","previous_headings":"","what":"Basic CSS Styling","title":"Styling a Quiz using CSS","text":"Let’s start basic styling enhance visual appeal quiz. ’ll add background colors, padding, shadows. ’re new CSS, guides provided Mozilla w3 schools excellent introductions. CSS straightforward learn , many cases, basic understanding necessary effectively style Shiny applications.","code":".quiz-container {   background-color: #f7f7f7;   padding: 20px;   border-radius: 5px; }  .quiz-header {   margin-bottom: 15px; }  .quiz-prompt {   background-color: #fff;   padding: 15px;   border-radius: 4px;   box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1); }"},{"path":"https://priism-center.github.io/shinyquiz/articles/styling.html","id":"styling-the-progress-bar","dir":"Articles","previous_headings":"","what":"Styling the Progress Bar","title":"Styling a Quiz using CSS","text":"progress bar important element provides visual feedback user. fill color can easily adjusted set_quiz_options() can style visually appealing aligned quiz theme.","code":".progress-bar {   height: 10px;   border-radius: 5px; }"},{"path":"https://priism-center.github.io/shinyquiz/articles/styling.html","id":"adjusting-div-width","dir":"Articles","previous_headings":"","what":"Adjusting Div Width","title":"Styling a Quiz using CSS","text":"Altering width quiz container elements can significantly impact layout. , adjust width quiz container ensure quiz neither cramped stretched.","code":".quiz-container {   max-width: 400px;   margin: auto; }"},{"path":"https://priism-center.github.io/shinyquiz/articles/styling.html","id":"interactive-elements","dir":"Articles","previous_headings":"","what":"Interactive Elements","title":"Styling a Quiz using CSS","text":"Style buttons, sliders, choice selectors make interactive engaging.","code":".submit-button, .skip-button {   background-color: #007bff;   color: white;   border: none;   padding: 10px 20px;   margin-top: 10px; }  .submit-button:hover, .skip-button:hover {   background-color: #0056b3; }"},{"path":"https://priism-center.github.io/shinyquiz/articles/styling.html","id":"incorporating-css-into-your-quiz","dir":"Articles","previous_headings":"","what":"Incorporating CSS into Your Quiz","title":"Styling a Quiz using CSS","text":"Shiny supports number methods incorporating CSS application. Inline CSS easiest can become messy many styles. larger projects, using file-based method putting .css file /www folder recommended. CSS powerful tool can transform basic quiz visually appealing engaging experience. Experiment different styles adjustments find works best quiz.","code":""},{"path":"https://priism-center.github.io/shinyquiz/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Marlo. Author, maintainer. George Perrett. Author.","code":""},{"path":"https://priism-center.github.io/shinyquiz/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marlo J, Perrett G (2025). shinyquiz: Create Interactive Quizzes 'shiny'. R package version 0.0.1.9000, https://priism-center.github.io/shinyquiz/.","code":"@Manual{,   title = {shinyquiz: Create Interactive Quizzes in 'shiny'},   author = {Joseph Marlo and George Perrett},   year = {2025},   note = {R package version 0.0.1.9000},   url = {https://priism-center.github.io/shinyquiz/}, }"},{"path":"https://priism-center.github.io/shinyquiz/index.html","id":"shinyquiz","dir":"","previous_headings":"","what":"Create Interactive Quizzes in shiny","title":"Create Interactive Quizzes in shiny","text":"shinyquiz R package creating simple, flexible quizzes within R Shiny. Easily create quizzes various pre-built question choice types create using htmltools shiny packages building blocks. Integrates Shiny applications. Ideal non-web-developers educators, data scientists, anyone wants assess responses interactively small form factor. shinyquiz excellent developing short, informal quizzes priority showing one question time. end question, users notified answer correct. quiz ends, summary page shows user’s grade, answer, correct answer. quiz can standalone application integrated larger Shiny application. built-method permanently recording users’ answers shinyquiz. default, package adheres R Shiny’s session data management. means user inputs responses held temporarily duration active session. session ends – typically user closes browser app stopped – inputs retained. persistent data storage required, later analysis record-keeping, users need implement data persistence logic. might involve capturing output quiz_server() saving responses database writing file. Learn using shinyquiz Get Started article.","code":""},{"path":"https://priism-center.github.io/shinyquiz/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Interactive Quizzes in shiny","text":"shinyquiz now CRAN. can also install latest development version GitHub:","code":"# install latest release from cran install.packages('shinyquiz')  # latest development version # install.packages(\"remotes\") remotes::install_github('priism-center/shinyquiz')"},{"path":"https://priism-center.github.io/shinyquiz/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create Interactive Quizzes in shiny","text":"can view live version app .","code":"library(shinyquiz)  quiz <- create_quiz(   create_question(     'What is the capital of Illinois?',     add_choice('Chicago'),     add_choice('Paw Paw'),     add_choice('Springfield', correct = TRUE)   ),   create_question(     'Which elements are gases at room temperature? Select all that apply.',     add_choice('Hydrogen', correct = TRUE),     add_choice('Mercury'),     add_choice('Nitrogen', correct = TRUE),     label = 'Select Hydrogen and Nitrogen'   ),   create_question(     'At what temperature does water boil at sea level?',     add_slider(min = 90, max = 150, default_position = 120, correct = 100),     label = 'Select 100'   ) ) preview_app(quiz)"},{"path":"https://priism-center.github.io/shinyquiz/reference/add_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Add choices to a quiz question — add_choice","title":"Add choices to a quiz question — add_choice","text":"Add choice quiz question. Used conjunction create_question() generate question.","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/add_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add choices to a quiz question — add_choice","text":"","code":"add_choice(text, correct = FALSE)  add_numeric(correct)  add_slider(min = 0, max = 1, default_position = 0.5, correct)  add_text(correct, exact = FALSE)"},{"path":"https://priism-center.github.io/shinyquiz/reference/add_choice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add choices to a quiz question — add_choice","text":"text Text choice answer correct Boolean denoting choice correct; numeric slider numeric min minimum value slider range max maximum value slider range default_position default value slider take exact Boolean denoting grader use exact matching. FALSE, user's answer compared correct answer trimming whitespace, converting lower case, normalizing diacritics. wish use normalizing function, please see create_question_raw().","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/add_choice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add choices to a quiz question — add_choice","text":"object class 'quizChoice' object class 'quizChoiceNumeric' object class 'quizChoiceSlider' object class 'quizChoiceText'","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/add_choice.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Add choices to a quiz question — add_choice","text":"add_choice(): Create discrete choice add_numeric(): Create numeric choice add_slider(): Create slider choice add_text(): Create free text choice","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyquiz/reference/add_choice.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add choices to a quiz question — add_choice","text":"Joseph Marlo George Perrett","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/add_choice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add choices to a quiz question — add_choice","text":"","code":"add_choice('39') #> An object of class \"quizChoice\" #> Slot \"text\": #> [1] \"39\" #>  #> Slot \"correct\": #> [1] FALSE #>  add_choice('39', TRUE) #> An object of class \"quizChoice\" #> Slot \"text\": #> [1] \"39\" #>  #> Slot \"correct\": #> [1] TRUE #>  add_slider(0, 1, 0.5, 0.8) #> An object of class \"quizChoiceSlider\" #> Slot \"min\": #> [1] 0 #>  #> Slot \"max\": #> [1] 1 #>  #> Slot \"default\": #> [1] 0.5 #>  #> Slot \"correct\": #> [1] 0.8 #>  add_text('Correct answer') #> An object of class \"quizChoiceText\" #> Slot \"correct\": #> [1] \"Correct answer\" #>  #> Slot \"exact\": #> [1] FALSE #>   q <- create_question(  'My question prompt',  add_choice('39'),  add_choice('41', TRUE) )  q1_fuzzy <- create_question('My Label', add_text(correct = ' hEllo')) q1_fuzzy@grader('Héllo ') #> [1] TRUE q1_exact <- create_question('My Label', add_text(correct = 'hEllo', exact = TRUE)) q1_exact@grader('Héllo ') #> [1] FALSE"},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a quiz question — create_question","title":"Create a quiz question — create_question","text":"Create single quiz question. Used conjunction create_quiz() generate quiz.","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a quiz question — create_question","text":"","code":"create_question(   prompt,   ...,   type = c(\"auto\", \"single\", \"multiple\"),   input = c(\"auto\", \"select\", \"checkbox\", \"radio\"),   shuffle = FALSE,   ns = shiny::NS(\"quiz\") )  create_question_raw(   prompt,   grader,   correct_answer_pretty,   user_answer_prettifier = function(user_input) paste0(user_input, collapse = \", \") )"},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a quiz question — create_question","text":"prompt Text question prompt. Can also HTML element htmltools::div(). ... Objects class 'quizChoice' generated add_choice(), add_numeric(), add_slider(), add_text(). Named options shiny::selectInput() shiny::checkboxGroupInput() can passed well. type One c('auto', 'single', 'multiple'). Can user select one answer multiple? input One c('auto', 'select', 'checkbox'). UI select input (shiny::selectInput()), checkbox (shiny::checkboxGroupInput()), radio buttons (shiny::radioButtons())? shuffle TRUE FALSE. TRUE order choices randomly shuffled. ns Namespace function generated shiny::NS() grader function takes user answer determines correct. Must take one argument return TRUE FALSE. Note wrapped purrr::possibly() base::isTRUE() catch errors. correct_answer_pretty string representing correct answer printed 'pretty' user_answer_prettifier function one argument takes user's answers prints 'pretty'","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a quiz question — create_question","text":"object class quizQuestion object class quizQuestion","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a quiz question — create_question","text":"create_question default method creating quiz questions. create_question_raw() allows HTML prompt. must contain shiny input accessible via input$answers. namespace also needs care. default inputId shiny::NS('quiz')('answers').","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a quiz question — create_question","text":"create_question(): Create quiz question create_question_raw(): Create quiz question using custom inputs. flexible function allows html.","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a quiz question — create_question","text":"Joseph Marlo, George Perrett Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a quiz question — create_question","text":"","code":"q <- create_question(   prompt = 'My prompt explaining what the ATE of this thing should be',   add_choice(\"34\"),   add_choice(\"59\", TRUE),   add_choice(\"98\", TRUE) )  q2 <- create_question(   prompt = 'My prompt explaining what the ATC of this thing should be',   add_slider(0, 30, 15, correct = 10)  ) quiz <- create_quiz(q, q2) q3 <- create_question_raw(   prompt = htmltools::div(     htmltools::p(\"my question\"),     shiny::selectInput(       inputId = shiny::NS('quiz')('answers'),       label = 'Select 5',       choices = c(4, 5, 6)     )  ),  grader = \\(user_input) user_input == '5',  correct_answer_pretty = '5' ) quiz2 <- create_quiz(q3, q2)"},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a random question — create_question_random","title":"Create a random question — create_question_random","text":"Create questions inherit randomness. Allows one function generate many different questions.","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a random question — create_question_random","text":"","code":"create_question_random(.f, n = 50, verify_randomness = TRUE)"},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a random question — create_question_random","text":".f function outputs object class quizQuestion. function can arguments must able produce random permutations questions. easiest way ensure including create_question() create_question_raw() call inside function (see example). n numeric value indicating many draws function .f include random question bank. verify_randomness boolean denote .f inherit randomness. Defaults TRUE.","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a random question — create_question_random","text":"list length n includes objects class quizQuestionRandom","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question_random.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a random question — create_question_random","text":"create_question_random() takes user generated function .f. function passed  .f argument creates random prompt along updated answer, function passed .f argument must return object class quizQuestion. create_question_random() automatically check ensure function passed .f appropriate format. n argument controls many random draws  function passed .f included question bank quiz. Higher values n allow unique questions extreme values n may also lead slower performance. create quiz n randomly generated questions, create_question_random() can passed argument create_quiz().","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question_random.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a random question — create_question_random","text":"George Perrett, Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_question_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a random question — create_question_random","text":"","code":"# a function that generates a random question random_question <- function() {   number <- round(rnorm(1, 30, 10), 0)   rand_prompt <- paste('Is', number, 'an even number?')      # using create_question inside the function helps to ensure correct class   q <- create_question(     prompt = rand_prompt,     add_choice('Yes, it is even', correct = number %% 2 == 0),      add_choice('No, it is odd', correct = number %% 2 != 0)   )      return(q) }  # create a quiz with a question bank of 20 randomly generated questions quiz <- create_quiz(   create_question_random(.f = random_question, n = 20) ) #> ℹ Checking function input #> ✔ Function inputs good [8ms] #>  #> ℹ Checking function output #> ✔ Function output good [21ms] #>  #> ℹ Checking randomness #> ✔ Randomness detected [59ms] #>  #> ℹ All clear! Your random question is looking good!"},{"path":"https://priism-center.github.io/shinyquiz/reference/create_quiz.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a quiz — create_quiz","title":"Create a quiz — create_quiz","text":"Create single quiz comprising questions generated create_question() /create_question_raw().","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_quiz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a quiz — create_quiz","text":"","code":"create_quiz(..., options = set_quiz_options())"},{"path":"https://priism-center.github.io/shinyquiz/reference/create_quiz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a quiz — create_quiz","text":"... objects class 'quizQuestions'. See create_question(), create_question_raw() options list options generated set_quiz_options()","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_quiz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a quiz — create_quiz","text":"object class quiz","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyquiz/reference/create_quiz.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a quiz — create_quiz","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/create_quiz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a quiz — create_quiz","text":"","code":"quiz <- create_quiz(   create_question(     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Select nulla.',     add_choice('auctor'),     add_choice('nulla', correct = TRUE)   ),   create_question(     'Mauris congue aliquet dui, ut dapibus lorem porttitor sed. Select 600.',     add_choice('600', correct = TRUE),     add_choice('800')   ) )"},{"path":"https://priism-center.github.io/shinyquiz/reference/preview_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools for previewing quizzes — preview_app","title":"Tools for previewing quizzes — preview_app","text":"Launch viewer preview structure questions quiz.","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/preview_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tools for previewing quizzes — preview_app","text":"","code":"preview_app(quiz, launch_browser = TRUE)"},{"path":"https://priism-center.github.io/shinyquiz/reference/preview_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tools for previewing quizzes — preview_app","text":"quiz object class 'quiz' preview launch_browser launch web browser?","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/preview_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tools for previewing quizzes — preview_app","text":"Called side effect","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/preview_app.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Tools for previewing quizzes — preview_app","text":"preview_app(): Preview quiz full operability","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/preview_app.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tools for previewing quizzes — preview_app","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/preview_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tools for previewing quizzes — preview_app","text":"","code":"if (FALSE) { # interactive() quiz <- create_quiz(   create_question(     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Select nulla.',     add_choice('auctor'),     add_choice('nulla', correct = TRUE)   ),   create_question(     'Mauris congue aliquet dui, ut dapibus lorem porttitor sed. Select 600.',     add_choice('600', correct = TRUE),     add_choice('800')   ) ) preview_app(quiz) }"},{"path":"https://priism-center.github.io/shinyquiz/reference/quiz_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a quiz in 'shiny' — quiz_ui","title":"Run a quiz in 'shiny' — quiz_ui","text":"'shiny' module implement quiz. core functions implement quiz 'shiny' application.","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/quiz_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a quiz in 'shiny' — quiz_ui","text":"","code":"quiz_ui(quiz)  quiz_server(quiz)"},{"path":"https://priism-center.github.io/shinyquiz/reference/quiz_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a quiz in 'shiny' — quiz_ui","text":"quiz object class quiz. See create_quiz()","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/quiz_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a quiz in 'shiny' — quiz_ui","text":"reactive object showing current results quiz","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/quiz_ui.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Run a quiz in 'shiny' — quiz_ui","text":"quiz_ui(): UI side function quiz_server(): Server side function","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyquiz/reference/quiz_ui.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run a quiz in 'shiny' — quiz_ui","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/quiz_ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a quiz in 'shiny' — quiz_ui","text":"","code":"if (FALSE) { # interactive() quiz <- create_quiz(   create_question(     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Select nulla.',     add_choice('auctor'),     add_choice('nulla', correct = TRUE)   ),   create_question(     'Mauris congue aliquet dui, ut dapibus lorem porttitor sed. Select 600.',     add_choice('600', correct = TRUE),     add_choice('800')   ) )  ui <- shiny::fluidPage(   htmltools::div(     style = \"max-width: 700px\",     quiz_ui(quiz)    )  ) server <- function(input, output, session) {  quiz_server(quiz) } shinyApp(ui, server) }"},{"path":"https://priism-center.github.io/shinyquiz/reference/set_quiz_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the options for the quiz — set_quiz_options","title":"Set the options for the quiz — set_quiz_options","text":"options passed quiz.","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/set_quiz_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the options for the quiz — set_quiz_options","text":"","code":"set_quiz_options(   ns = shiny::NS(\"quiz\"),   messages,   sandbox = FALSE,   end_on_first_wrong = !sandbox,   class = NULL,   progress_bar = !sandbox,   progress_bar_color = \"#609963\",   question_heading = \"Practice what you've learned\",   include_question_title = TRUE,   ... )  create_messages(message_correct, message_wrong, message_skipped)"},{"path":"https://priism-center.github.io/shinyquiz/reference/set_quiz_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the options for the quiz — set_quiz_options","text":"ns namespace generated shiny::NS(). using custom namespaces, individual create_question() requires namespace well. messages object class quizMessages generated create_messages() containing messages show end. provided, defaults used. sandbox boolean. Quiz longer ends first wrong, removes progress bar, grading include unattempted questions. Note presence random question automatically triggers sandbox mode. can overridden set_quiz_options(override = TRUE). end_on_first_wrong quiz immediately end user gets one question wrong? class string. custom CSS class add quiz div progress_bar boolean. Show progress bar UI top quiz progress_bar_color Color code progress bar background question_heading Default text show question prompt. include_question_title boolean. text \"Question #\" included prompt? included, green check / red X shown either. ... named options pass quiz message_correct string shown end quiz user gets questions correct message_wrong string shown end quiz user gets least one question wrong message_skipped string shown end quiz user skips quiz ends early","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/set_quiz_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the options for the quiz — set_quiz_options","text":"list object class quizMessages","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/set_quiz_options.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Set the options for the quiz — set_quiz_options","text":"set_quiz_options(): Sets options quiz create_messages(): Create messages object","code":""},{"path":"https://priism-center.github.io/shinyquiz/reference/set_quiz_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the options for the quiz — set_quiz_options","text":"","code":"# set the options when creating the quiz quiz <- create_quiz(   create_question(     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Select nulla.',     add_choice('auctor'),     add_choice('nulla', correct = TRUE)   ),   create_question(     'Mauris congue aliquet dui, ut dapibus lorem porttitor sed. Select 600.',     add_choice('600', correct = TRUE),     add_choice('800')   ),   options = set_quiz_options(sandbox = TRUE) )  # or modify the options on a quiz object quiz@options <- set_quiz_options(sandbox = FALSE)  # adjust the messages shown at the end of the quiz messages <- create_messages(   'Congrats!',   'Ahh, bummer! Got at least one wrong',   'Looks like you skipped to the end!'  ) quiz@options <- set_quiz_options(messages = messages)"}]
